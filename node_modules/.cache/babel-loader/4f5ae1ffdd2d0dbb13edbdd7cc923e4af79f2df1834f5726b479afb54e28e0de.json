{"ast":null,"code":"var _jsxFileName = \"/Users/eccentric-hack/gamet/src/components/PhotoAnalysis/PhotoAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './PhotoAnalysis.css';\n\n// IMPORTANT: API keys should NEVER be hardcoded in client-side code.\n// This is a placeholder and would typically be handled by a backend server.\n// const GEMINI_API_KEY = 'YOUR_ACTUAL_API_KEY_STORED_SAFELY_ON_BACKEND';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function mockFetchGeminiAPI(file) {\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 2500));\n\n  // In a real scenario, you would use the file to make a request to your backend,\n  // which then calls the Gemini API.\n  // The response structure below is a simplified mock-up of what Gemini might return.\n\n  // Note: The API key you provided (AIzaSyDk...) would be used by your backend server,\n  // NOT directly in the frontend like this.\n\n  console.log(`Simulating API call for file: ${file.name}. In a real app, a backend would use its Gemini API key here.`);\n  return {\n    data: {\n      candidates: [{\n        content: {\n          parts: [{\n            text: `이 사진은 ${file.name}에 대한 것으로, 화창한 날 야외에서 촬영된 것으로 보입니다. 여러 사람이 즐겁게 웃고 있으며, 배경에는 푸른 나무와 하늘이 보입니다. 사진의 전체적인 분위기는 매우 밝고 긍정적입니다.`\n          }, {\n            text: \"주요 객체로는 사람, 나무, 하늘, 잔디밭 등이 인식됩니다.\"\n          }, {\n            text: \"사진에서 느껴지는 주요 감정은 행복, 즐거움, 편안함입니다.\"\n          }, {\n            inlineData: {\n              // This part would typically contain image data or other structured info\n              objectsDetected: [{\n                name: '사람',\n                confidence: 0.96,\n                boundingBox: [0.1, 0.2, 0.5, 0.8]\n              }, {\n                name: '나무',\n                confidence: 0.90,\n                boundingBox: [0.5, 0.1, 0.9, 0.9]\n              }, {\n                name: '미소',\n                confidence: 0.98,\n                category: '표정'\n              }, {\n                name: '하늘',\n                confidence: 0.85\n              }],\n              dominantColors: ['#5DBB63', '#4A90E2', '#F8E71C', '#FFFFFF', '#333333'],\n              ocrDetectedText: null // e.g., \"Vacation 2024\"\n            }\n          }]\n        },\n        safetyRatings: [{\n          category: 'HARM_CATEGORY_HARASSMENT',\n          probability: 'NEGLIGIBLE'\n        }\n        // ... other safety ratings\n        ]\n      }],\n      promptFeedback: {\n        safetyRatings: [{\n          category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n          probability: 'NEGLIGIBLE'\n        }\n        // ... other safety ratings for the prompt itself\n        ]\n      }\n    }\n  };\n}\nfunction PhotoAnalysis() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = useCallback(event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n    try {\n      // Simulate calling the (mock) Gemini API\n      const response = await mockFetchGeminiAPI(selectedFile);\n\n      // Process the mock response (simplified)\n      if (response.data && response.data.candidates && response.data.candidates.length > 0) {\n        const candidate = response.data.candidates[0];\n        let processedResult = {\n          fileName: selectedFile.name,\n          fullDescription: [],\n          detailedObjects: [],\n          emotions: [],\n          // Simplified, real API might give sentiment scores\n          dominantColors: [],\n          ocrText: null\n        };\n        candidate.content.parts.forEach(part => {\n          if (part.text) {\n            processedResult.fullDescription.push(part.text);\n            if (part.text.includes(\"감정은\")) {\n              // Basic emotion parsing from text - very simplistic\n              const emotionMatch = part.text.match(/감정은 ([^.]+)/);\n              if (emotionMatch && emotionMatch[1]) {\n                processedResult.emotions = emotionMatch[1].split(', ').map(e => e.trim());\n              }\n            }\n          }\n          if (part.inlineData) {\n            processedResult.detailedObjects = part.inlineData.objectsDetected || [];\n            processedResult.dominantColors = part.inlineData.dominantColors || [];\n            processedResult.ocrText = part.inlineData.ocrDetectedText;\n          }\n        });\n\n        // Add some generic suggestions based on the mock analysis\n        processedResult.generatedQuestions = [\"이 사진을 볼 때 어떤 기분이 드나요?\", \"사진 속 특별한 순간에 대해 더 자세히 이야기해주세요.\", \"이 사진과 관련된 재미있는 에피소드가 있나요?\"];\n        processedResult.creativePrompts = ['이 사진에 어울리는 짧은 이야기를 지어보세요.', '사진의 감정을 담은 시를 써보는 건 어때요?', '이 사진을 친구에게 보여주고 함께 추억을 나눠보세요.'];\n        setAnalysisResult(processedResult);\n      } else {\n        setError('AI 분석 결과를 가져오는데 실패했습니다. (응답 형식 오류)');\n      }\n    } catch (err) {\n      console.error(\"Error during mock API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"photo-analysis-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCF8 \\uC0AC\\uC9C4 \\uBD84\\uC11D \\uBC0F \\uC0C1\\uD638\\uC791\\uC6A9 (AI \\uC2DC\\uBBAC\\uB808\\uC774\\uC158)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC0AC\\uC9C4\\uC744 \\uC5C5\\uB85C\\uB4DC\\uD558\\uBA74 AI\\uAC00 \\uC0AC\\uC9C4\\uC758 \\uC694\\uC18C\\uB4E4\\uC744 \\uBD84\\uC11D\\uD558\\uACE0, \\uC774\\uB97C \\uBC14\\uD0D5\\uC73C\\uB85C \\uB2E4\\uC591\\uD55C \\uD65C\\uB3D9\\uC744 \\uC81C\\uC548\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"(\\uC8FC\\uC758: \\uD604\\uC7AC\\uB294 \\uC2DC\\uBBAC\\uB808\\uC774\\uC158\\uB41C \\uACB0\\uACFC\\uC774\\uBA70, \\uC2E4\\uC81C API \\uD0A4\\uB294 \\uBCF4\\uC548\\uC0C1\\uC758 \\uC774\\uC720\\uB85C \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\uCF54\\uB4DC\\uC5D0 \\uC9C1\\uC811 \\uC0AC\\uC6A9\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uC2E4\\uC81C \\uAD6C\\uD604 \\uC2DC \\uBC31\\uC5D4\\uB4DC \\uC11C\\uBC84\\uB97C \\uD1B5\\uD574 \\uC548\\uC804\\uD558\\uAC8C API\\uB97C \\uD638\\uCD9C\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC0AC\\uC9C4 \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analysis-button\",\n      onClick: handleAnalysis,\n      disabled: !selectedFile || isLoading,\n      children: isLoading ? 'AI 심층 분석 중...' : 'AI 분석 시작'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"AI\\uAC00 \\uC0AC\\uC9C4\\uC744 \\uC2EC\\uCE35 \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI \\uBD84\\uC11D \\uACB0\\uACFC (\\uC2DC\\uBBAC\\uB808\\uC774\\uC158)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD30C\\uC77C\\uBA85:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 14\n        }, this), \" \", analysisResult.fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"AI\\uC758 \\uC885\\uD569 \\uC0AC\\uC9C4 \\uC124\\uBA85:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), analysisResult.fullDescription.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 64\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC778\\uC2DD\\uB41C \\uC8FC\\uC694 \\uAC1D\\uCCB4 \\uBC0F \\uD2B9\\uC9D5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), analysisResult.detailedObjects && analysisResult.detailedObjects.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: analysisResult.detailedObjects.map((obj, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [obj.name, obj.confidence && ` (정확도: ${Math.round(obj.confidence * 100)}%)`, obj.category && ` - 분류: ${obj.category}`]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC0C1\\uC138 \\uAC1D\\uCCB4 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this), analysisResult.emotions && analysisResult.emotions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC8FC\\uC694 \\uAC10\\uC815:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 16\n        }, this), \" \", analysisResult.emotions.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), analysisResult.ocrText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC0AC\\uC9C4 \\uC18D \\uD14D\\uC2A4\\uD2B8:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }, this), \" \", analysisResult.ocrText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 38\n      }, this), analysisResult.dominantColors && analysisResult.dominantColors.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uCD94\\uCD9C\\uB41C \\uC8FC\\uC694 \\uC0C9\\uC0C1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '10px',\n            marginBottom: '15px'\n          },\n          children: analysisResult.dominantColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: color,\n              width: '30px',\n              height: '30px',\n              marginRight: '5px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            title: color\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), analysisResult.generatedQuestions && analysisResult.generatedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"AI\\uAC00 \\uBB3B\\uACE0 \\uC2F6\\uC5B4\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: analysisResult.generatedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), analysisResult.creativePrompts && analysisResult.creativePrompts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"AI \\uCD94\\uCC9C! \\uC774\\uB7F0 \\uD65C\\uB3D9\\uC740 \\uC5B4\\uB54C\\uC694?:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: analysisResult.creativePrompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: prompt\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(PhotoAnalysis, \"ULtQzpzodBq3BMw0F9tR6o1Uu1Q=\");\n_c = PhotoAnalysis;\nexport default PhotoAnalysis;\nvar _c;\n$RefreshReg$(_c, \"PhotoAnalysis\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","mockFetchGeminiAPI","file","Promise","resolve","setTimeout","console","log","name","data","candidates","content","parts","text","inlineData","objectsDetected","confidence","boundingBox","category","dominantColors","ocrDetectedText","safetyRatings","probability","promptFeedback","PhotoAnalysis","_s","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","analysisResult","setAnalysisResult","isLoading","setIsLoading","error","setError","handleFileChange","event","target","files","URL","createObjectURL","handleAnalysis","response","length","candidate","processedResult","fileName","fullDescription","detailedObjects","emotions","ocrText","forEach","part","push","includes","emotionMatch","match","split","map","e","trim","generatedQuestions","creativePrompts","err","message","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","disabled","style","color","textAlign","index","obj","Math","round","join","display","marginTop","marginBottom","backgroundColor","width","height","marginRight","borderRadius","border","title","question","prompt","_c","$RefreshReg$"],"sources":["/Users/eccentric-hack/gamet/src/components/PhotoAnalysis/PhotoAnalysis.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './PhotoAnalysis.css';\n\n// IMPORTANT: API keys should NEVER be hardcoded in client-side code.\n// This is a placeholder and would typically be handled by a backend server.\n// const GEMINI_API_KEY = 'YOUR_ACTUAL_API_KEY_STORED_SAFELY_ON_BACKEND';\n\nasync function mockFetchGeminiAPI(file) {\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 2500));\n\n  // In a real scenario, you would use the file to make a request to your backend,\n  // which then calls the Gemini API.\n  // The response structure below is a simplified mock-up of what Gemini might return.\n  \n  // Note: The API key you provided (AIzaSyDk...) would be used by your backend server,\n  // NOT directly in the frontend like this.\n\n  console.log(`Simulating API call for file: ${file.name}. In a real app, a backend would use its Gemini API key here.`);\n\n  return {\n    data: {\n      candidates: [\n        {\n          content: {\n            parts: [\n              { text: `이 사진은 ${file.name}에 대한 것으로, 화창한 날 야외에서 촬영된 것으로 보입니다. 여러 사람이 즐겁게 웃고 있으며, 배경에는 푸른 나무와 하늘이 보입니다. 사진의 전체적인 분위기는 매우 밝고 긍정적입니다.` },\n              { text: \"주요 객체로는 사람, 나무, 하늘, 잔디밭 등이 인식됩니다.\" },\n              { text: \"사진에서 느껴지는 주요 감정은 행복, 즐거움, 편안함입니다.\" },\n              {\n                inlineData: { // This part would typically contain image data or other structured info\n                  objectsDetected: [\n                    { name: '사람', confidence: 0.96, boundingBox: [0.1, 0.2, 0.5, 0.8] },\n                    { name: '나무', confidence: 0.90, boundingBox: [0.5, 0.1, 0.9, 0.9] },\n                    { name: '미소', confidence: 0.98, category: '표정' },\n                    { name: '하늘', confidence: 0.85 },\n                  ],\n                  dominantColors: ['#5DBB63', '#4A90E2', '#F8E71C', '#FFFFFF', '#333333'],\n                  ocrDetectedText: null, // e.g., \"Vacation 2024\"\n                }\n              }\n            ]\n          },\n          safetyRatings: [\n            { category: 'HARM_CATEGORY_HARASSMENT', probability: 'NEGLIGIBLE' },\n            // ... other safety ratings\n          ]\n        }\n      ],\n      promptFeedback: {\n        safetyRatings: [\n            { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', probability: 'NEGLIGIBLE' },\n            // ... other safety ratings for the prompt itself\n        ]\n      }\n    }\n  };\n}\n\nfunction PhotoAnalysis() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = useCallback((event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n\n    try {\n      // Simulate calling the (mock) Gemini API\n      const response = await mockFetchGeminiAPI(selectedFile);\n\n      // Process the mock response (simplified)\n      if (response.data && response.data.candidates && response.data.candidates.length > 0) {\n        const candidate = response.data.candidates[0];\n        let processedResult = {\n          fileName: selectedFile.name,\n          fullDescription: [],\n          detailedObjects: [],\n          emotions: [], // Simplified, real API might give sentiment scores\n          dominantColors: [],\n          ocrText: null,\n        };\n\n        candidate.content.parts.forEach(part => {\n          if (part.text) {\n            processedResult.fullDescription.push(part.text);\n            if (part.text.includes(\"감정은\")) {\n              // Basic emotion parsing from text - very simplistic\n              const emotionMatch = part.text.match(/감정은 ([^.]+)/);\n              if (emotionMatch && emotionMatch[1]) {\n                processedResult.emotions = emotionMatch[1].split(', ').map(e => e.trim());\n              }\n            }\n          }\n          if (part.inlineData) {\n            processedResult.detailedObjects = part.inlineData.objectsDetected || [];\n            processedResult.dominantColors = part.inlineData.dominantColors || [];\n            processedResult.ocrText = part.inlineData.ocrDetectedText;\n          }\n        });\n        \n        // Add some generic suggestions based on the mock analysis\n        processedResult.generatedQuestions = [\n          \"이 사진을 볼 때 어떤 기분이 드나요?\",\n          \"사진 속 특별한 순간에 대해 더 자세히 이야기해주세요.\",\n          \"이 사진과 관련된 재미있는 에피소드가 있나요?\"\n        ];\n        processedResult.creativePrompts = [\n          '이 사진에 어울리는 짧은 이야기를 지어보세요.',\n          '사진의 감정을 담은 시를 써보는 건 어때요?',\n          '이 사진을 친구에게 보여주고 함께 추억을 나눠보세요.'\n        ];\n\n        setAnalysisResult(processedResult);\n      } else {\n        setError('AI 분석 결과를 가져오는데 실패했습니다. (응답 형식 오류)');\n      }\n    } catch (err) {\n      console.error(\"Error during mock API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n\n  return (\n    <section className=\"photo-analysis-section\">\n      <h2>📸 사진 분석 및 상호작용 (AI 시뮬레이션)</h2>\n      <p>\n        사진을 업로드하면 AI가 사진의 요소들을 분석하고, 이를 바탕으로 다양한 활동을 제안합니다. \n        <strong>(주의: 현재는 시뮬레이션된 결과이며, 실제 API 키는 보안상의 이유로 클라이언트 코드에 직접 사용되지 않습니다. 실제 구현 시 백엔드 서버를 통해 안전하게 API를 호출해야 합니다.)</strong>\n      </p>\n      \n      <div className=\"upload-area\">\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        {previewUrl && (\n          <div className=\"image-preview\">\n            <img src={previewUrl} alt=\"업로드된 사진 미리보기\" />\n          </div>\n        )}\n      </div>\n\n      <button \n        className=\"analysis-button\" \n        onClick={handleAnalysis} \n        disabled={!selectedFile || isLoading}\n      >\n        {isLoading ? 'AI 심층 분석 중...' : 'AI 분석 시작'}\n      </button>\n\n      {isLoading && <p className=\"loading-message\">AI가 사진을 심층 분석하고 있습니다. 잠시만 기다려 주세요...</p>}\n      {error && <p className=\"error-message\" style={{color: 'red', textAlign: 'center'}}>{error}</p>}\n\n      {analysisResult && (\n        <div className=\"analysis-result\">\n          <h3>AI 분석 결과 (시뮬레이션)</h3>\n          <p><strong>파일명:</strong> {analysisResult.fileName}</p>\n          \n          <h4>AI의 종합 사진 설명:</h4>\n          {analysisResult.fullDescription.map((text, index) => <p key={index}>{text}</p>)}\n          \n          <h4>인식된 주요 객체 및 특징:</h4>\n          {analysisResult.detailedObjects && analysisResult.detailedObjects.length > 0 ? (\n            <ul>\n              {analysisResult.detailedObjects.map((obj, index) => (\n                <li key={index}>\n                  {obj.name} \n                  {obj.confidence && ` (정확도: ${Math.round(obj.confidence * 100)}%)`}\n                  {obj.category && ` - 분류: ${obj.category}`}\n                </li>\n              ))}\n            </ul>\n          ) : <p>상세 객체 정보가 없습니다.</p>}\n          \n          {analysisResult.emotions && analysisResult.emotions.length > 0 && \n            <p><strong>주요 감정:</strong> {analysisResult.emotions.join(', ')}</p>\n          }\n\n          {analysisResult.ocrText && <p><strong>사진 속 텍스트:</strong> {analysisResult.ocrText}</p>}\n\n          {analysisResult.dominantColors && analysisResult.dominantColors.length > 0 && (\n            <>\n              <h4>추출된 주요 색상:</h4>\n              <div style={{ display: 'flex', marginTop: '10px', marginBottom: '15px' }}>\n                {analysisResult.dominantColors.map((color, index) => (\n                  <div \n                    key={index} \n                    style={{ \n                      backgroundColor: color, \n                      width: '30px', \n                      height: '30px', \n                      marginRight: '5px',\n                      borderRadius: '4px',\n                      border: '1px solid #ccc'\n                    }}\n                    title={color}\n                  ></div>\n                ))}\n              </div>\n            </>\n          )}\n\n          {analysisResult.generatedQuestions && analysisResult.generatedQuestions.length > 0 && (\n             <>\n              <h4>AI가 묻고 싶어요:</h4>\n              <ul>\n                {analysisResult.generatedQuestions.map((question, index) => (\n                  <li key={index}>{question}</li>\n                ))}\n              </ul>\n            </>\n          )}\n\n          {analysisResult.creativePrompts && analysisResult.creativePrompts.length > 0 && (\n            <>\n              <h4>AI 추천! 이런 활동은 어때요?:</h4>\n              <ul>\n                {analysisResult.creativePrompts.map((prompt, index) => (\n                  <li key={index}>{prompt}</li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default PhotoAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}