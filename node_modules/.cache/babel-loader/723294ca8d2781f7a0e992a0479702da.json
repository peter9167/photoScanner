{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\\\uCE74\\uCE74\\uC624\\uD1A1 \\uBC1B\\uC740 \\uD30C\\uC77C\\\\photoScanner\\\\src\\\\components\\\\PhotoAnalysis\\\\PhotoAnalysis.js\";\nimport React, { useState, useCallback } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './PhotoAnalysis.css';\n\n// WARNING: DO NOT EXPOSE YOUR API KEY PUBLICLY.\n// This is for local testing ONLY. Remove or secure via a backend for production.\nconst GEMINI_API_KEY = 'AIzaSyDkx4L2FvHs8Xqd_YSuhVCPhU0rx37PHZM';\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${GEMINI_API_KEY}`;\n\n// Helper function to convert file to base64\nconst fileToGenerativePart = async file => {\n  const base64EncodedDataPromise = new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result.split(',')[1]);\n    reader.readAsDataURL(file);\n  });\n  return {\n    inlineData: {\n      data: await base64EncodedDataPromise,\n      mimeType: file.type\n    }\n  };\n};\nfunction PhotoAnalysis() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = useCallback(event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n    try {\n      const imagePart = await fileToGenerativePart(selectedFile);\n      const prompt = \"이 사진을 자세히 설명해주세요. 사진 속에 무엇이 있는지, 어떤 분위기인지, 어떤 감정이 느껴지는지 알려주세요. 마크다운 형식(예: **중요한 부분**)을 사용하여 강조할 부분을 표시해주세요. 또한, 이 사진과 관련하여 사용자와 상호작용할 수 있는 창의적인 활동이나 질문 3가지를 제안해주세요.\";\n      const requestBody = {\n        contents: [{\n          parts: [{\n            text: prompt\n          }, imagePart]\n        }]\n        // Optional: Add generationConfig if needed\n        // generationConfig: {\n        //   maxOutputTokens: 2048,\n        //   temperature: 0.4,\n        //   topP: 1,\n        //   topK: 32\n        // }\n      };\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        console.error('Gemini API Error:', errorData);\n        throw new Error(`API 요청 실패: ${response.status} ${response.statusText}. ${(errorData === null || errorData === void 0 ? void 0 : (_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || ''}`);\n      }\n      const responseData = await response.json();\n      if (responseData.candidates && responseData.candidates.length > 0 && responseData.candidates[0].content) {\n        const parts = responseData.candidates[0].content.parts;\n        let fullTextResponse = \"\";\n        parts.forEach(part => {\n          if (part.text) {\n            fullTextResponse += part.text + '\\n';\n          }\n        });\n        setAnalysisResult({\n          fileName: selectedFile.name,\n          apiResponseText: fullTextResponse.trim()\n          // You might want to parse more structured data if the API provides it,\n          // or use further prompts to get structured JSON.\n          // For now, we display the raw text response.\n        });\n      } else if (responseData.promptFeedback && responseData.promptFeedback.blockReason) {\n        var _responseData$promptF;\n        setError(`분석이 차단되었습니다: ${responseData.promptFeedback.blockReason} - ${((_responseData$promptF = responseData.promptFeedback.safetyRatings) === null || _responseData$promptF === void 0 ? void 0 : _responseData$promptF.map(r => `${r.category} (${r.probability})`).join(', ')) || '세부 정보 없음'}`);\n      } else {\n        console.warn(\"Unexpected API response structure:\", responseData);\n        setError('AI 분석 결과를 가져왔으나, 예상치 못한 응답 구조입니다.');\n      }\n    } catch (err) {\n      console.error(\"Error during API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"photo-analysis-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCF8 \\uC0AC\\uC9C4 \\uBD84\\uC11D \\uBC0F \\uC0C1\\uD638\\uC791\\uC6A9\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), previewUrl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: previewUrl,\n    alt: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC0AC\\uC9C4 \\uBBF8\\uB9AC\\uBCF4\\uAE30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"analysis-button\",\n    onClick: handleAnalysis,\n    disabled: !selectedFile || isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, isLoading ? 'Gemini AI 분석 중...' : 'AI 분석 시작'), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loading-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Gemini AI\\uAC00 \\uC0AC\\uC9C4\\uC744 \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    style: {\n      color: 'red',\n      textAlign: 'center',\n      whiteSpace: 'pre-wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, error), analysisResult && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"analysis-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"AI \\uBD84\\uC11D \\uACB0\\uACFC\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 14\n    }\n  }, \"\\uD30C\\uC77C\\uBA85:\"), \" \", analysisResult.fileName), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"AI\\uC758 \\uBD84\\uC11D \\uB0B4\\uC6A9:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"markdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, analysisResult.apiResponseText))));\n}\nexport default PhotoAnalysis;","map":{"version":3,"names":["React","useState","useCallback","ReactMarkdown","GEMINI_API_KEY","GEMINI_API_URL","fileToGenerativePart","file","base64EncodedDataPromise","Promise","resolve","reader","FileReader","onloadend","result","split","readAsDataURL","inlineData","data","mimeType","type","PhotoAnalysis","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","analysisResult","setAnalysisResult","isLoading","setIsLoading","error","setError","handleFileChange","event","target","files","URL","createObjectURL","handleAnalysis","imagePart","prompt","requestBody","contents","parts","text","response","fetch","method","headers","body","JSON","stringify","ok","_errorData$error","errorData","json","console","Error","status","statusText","message","responseData","candidates","length","content","fullTextResponse","forEach","part","fileName","name","apiResponseText","trim","promptFeedback","blockReason","_responseData$promptF","safetyRatings","map","r","category","probability","join","warn","err","createElement","className","__self","__source","_jsxFileName","lineNumber","columnNumber","accept","onChange","src","alt","onClick","disabled","style","color","textAlign","whiteSpace"],"sources":["C:/Users/User/Documents/카카오톡 받은 파일/photoScanner/src/components/PhotoAnalysis/PhotoAnalysis.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './PhotoAnalysis.css';\n\n// WARNING: DO NOT EXPOSE YOUR API KEY PUBLICLY.\n// This is for local testing ONLY. Remove or secure via a backend for production.\nconst GEMINI_API_KEY = 'AIzaSyDkx4L2FvHs8Xqd_YSuhVCPhU0rx37PHZM';\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${GEMINI_API_KEY}`;\n\n// Helper function to convert file to base64\nconst fileToGenerativePart = async (file) => {\n  const base64EncodedDataPromise = new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result.split(',')[1]);\n    reader.readAsDataURL(file);\n  });\n  return {\n    inlineData: { data: await base64EncodedDataPromise, mimeType: file.type },\n  };\n};\n\nfunction PhotoAnalysis() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = useCallback((event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n\n    try {\n      const imagePart = await fileToGenerativePart(selectedFile);\n      const prompt = \"이 사진을 자세히 설명해주세요. 사진 속에 무엇이 있는지, 어떤 분위기인지, 어떤 감정이 느껴지는지 알려주세요. 마크다운 형식(예: **중요한 부분**)을 사용하여 강조할 부분을 표시해주세요. 또한, 이 사진과 관련하여 사용자와 상호작용할 수 있는 창의적인 활동이나 질문 3가지를 제안해주세요.\";\n      \n      const requestBody = {\n        contents: [\n          {\n            parts: [\n              { text: prompt },\n              imagePart,\n            ],\n          },\n        ],\n        // Optional: Add generationConfig if needed\n        // generationConfig: {\n        //   maxOutputTokens: 2048,\n        //   temperature: 0.4,\n        //   topP: 1,\n        //   topK: 32\n        // }\n      };\n\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Gemini API Error:', errorData);\n        throw new Error(`API 요청 실패: ${response.status} ${response.statusText}. ${errorData?.error?.message || ''}`);\n      }\n\n      const responseData = await response.json();\n      \n      if (responseData.candidates && responseData.candidates.length > 0 && responseData.candidates[0].content) {\n        const parts = responseData.candidates[0].content.parts;\n        let fullTextResponse = \"\";\n        parts.forEach(part => {\n          if (part.text) {\n            fullTextResponse += part.text + '\\n';\n          }\n        });\n\n        setAnalysisResult({\n          fileName: selectedFile.name,\n          apiResponseText: fullTextResponse.trim(),\n          // You might want to parse more structured data if the API provides it,\n          // or use further prompts to get structured JSON.\n          // For now, we display the raw text response.\n        });\n      } else if (responseData.promptFeedback && responseData.promptFeedback.blockReason) {\n        setError(`분석이 차단되었습니다: ${responseData.promptFeedback.blockReason} - ${responseData.promptFeedback.safetyRatings?.map(r => `${r.category} (${r.probability})`).join(', ') || '세부 정보 없음'}`);\n      } else {\n        console.warn(\"Unexpected API response structure:\", responseData);\n        setError('AI 분석 결과를 가져왔으나, 예상치 못한 응답 구조입니다.');\n      }\n\n    } catch (err) {\n      console.error(\"Error during API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n\n  return (\n    <section className=\"photo-analysis-section\">\n      <h2>📸 사진 분석 및 상호작용</h2>\n      \n      <div className=\"upload-area\">\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        {previewUrl && (\n          <div className=\"image-preview\">\n            <img src={previewUrl} alt=\"업로드된 사진 미리보기\" />\n          </div>\n        )}\n      </div>\n\n      <button \n        className=\"analysis-button\" \n        onClick={handleAnalysis} \n        disabled={!selectedFile || isLoading}\n      >\n        {isLoading ? 'Gemini AI 분석 중...' : 'AI 분석 시작'}\n      </button>\n\n      {isLoading && <p className=\"loading-message\">Gemini AI가 사진을 분석하고 있습니다. 잠시만 기다려 주세요...</p>}\n      {error && <p className=\"error-message\" style={{color: 'red', textAlign: 'center', whiteSpace: 'pre-wrap'}}>{error}</p>}\n\n      {analysisResult && (\n        <div className=\"analysis-result\">\n          <h3>AI 분석 결과</h3>\n          <p><strong>파일명:</strong> {analysisResult.fileName}</p>\n          <h4>AI의 분석 내용:</h4>\n          <div className=\"markdown-content\">\n            <ReactMarkdown>{analysisResult.apiResponseText}</ReactMarkdown>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default PhotoAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}