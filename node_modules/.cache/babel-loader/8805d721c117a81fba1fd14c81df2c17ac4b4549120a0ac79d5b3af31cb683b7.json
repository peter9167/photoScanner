{"ast":null,"code":"var _jsxFileName = \"/Users/eccentric-hack/gamet/src/components/PhotoAnalysis/PhotoAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './PhotoAnalysis.css';\n\n// WARNING: DO NOT EXPOSE YOUR API KEY PUBLICLY.\n// This is for local testing ONLY. Remove or secure via a backend for production.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GEMINI_API_KEY = 'AIzaSyDkx4L2FvHs8Xqd_YSuhVCPhU0rx37PHZM';\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${GEMINI_API_KEY}`;\n\n// Helper function to convert file to base64\nconst fileToGenerativePart = async file => {\n  const base64EncodedDataPromise = new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result.split(',')[1]);\n    reader.readAsDataURL(file);\n  });\n  return {\n    inlineData: {\n      data: await base64EncodedDataPromise,\n      mimeType: file.type\n    }\n  };\n};\nfunction PhotoAnalysis() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = useCallback(event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n    try {\n      const imagePart = await fileToGenerativePart(selectedFile);\n      const prompt = \"이 사진을 자세히 설명해주세요. 사진 속에 무엇이 있는지, 어떤 분위기인지, 어떤 감정이 느껴지는지 알려주세요. 또한, 이 사진과 관련하여 사용자와 상호작용할 수 있는 창의적인 활동이나 질문 3가지를 제안해주세요.\";\n      const requestBody = {\n        contents: [{\n          parts: [{\n            text: prompt\n          }, imagePart]\n        }]\n        // Optional: Add generationConfig if needed\n        // generationConfig: {\n        //   maxOutputTokens: 2048,\n        //   temperature: 0.4,\n        //   topP: 1,\n        //   topK: 32\n        // }\n      };\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        console.error('Gemini API Error:', errorData);\n        throw new Error(`API 요청 실패: ${response.status} ${response.statusText}. ${(errorData === null || errorData === void 0 ? void 0 : (_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || ''}`);\n      }\n      const responseData = await response.json();\n      if (responseData.candidates && responseData.candidates.length > 0 && responseData.candidates[0].content) {\n        const parts = responseData.candidates[0].content.parts;\n        let fullTextResponse = \"\";\n        parts.forEach(part => {\n          if (part.text) {\n            fullTextResponse += part.text + '\\n';\n          }\n        });\n        setAnalysisResult({\n          fileName: selectedFile.name,\n          apiResponseText: fullTextResponse.trim()\n          // You might want to parse more structured data if the API provides it,\n          // or use further prompts to get structured JSON.\n          // For now, we display the raw text response.\n        });\n      } else if (responseData.promptFeedback && responseData.promptFeedback.blockReason) {\n        var _responseData$promptF;\n        setError(`분석이 차단되었습니다: ${responseData.promptFeedback.blockReason} - ${((_responseData$promptF = responseData.promptFeedback.safetyRatings) === null || _responseData$promptF === void 0 ? void 0 : _responseData$promptF.map(r => `${r.category} (${r.probability})`).join(', ')) || '세부 정보 없음'}`);\n      } else {\n        console.warn(\"Unexpected API response structure:\", responseData);\n        setError('AI 분석 결과를 가져왔으나, 예상치 못한 응답 구조입니다.');\n      }\n    } catch (err) {\n      console.error(\"Error during API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"photo-analysis-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCF8 \\uC0AC\\uC9C4 \\uBD84\\uC11D \\uBC0F \\uC0C1\\uD638\\uC791\\uC6A9 (Gemini API \\uC5F0\\uB3D9)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        fontWeight: 'bold'\n      },\n      children: \"\\uC8FC\\uC758: \\uC2E4\\uC81C Gemini API \\uD0A4\\uAC00 \\uCF54\\uB4DC\\uC5D0 \\uD3EC\\uD568\\uB418\\uC5B4 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uAC83\\uC740 \\uB85C\\uCEEC \\uD14C\\uC2A4\\uD2B8\\uC6A9\\uC774\\uBA70, \\uD504\\uB85C\\uB355\\uC158 \\uD658\\uACBD\\uC774\\uB098 \\uACF5\\uAC1C \\uC800\\uC7A5\\uC18C\\uC5D0 \\uC808\\uB300\\uB85C \\uC774\\uB300\\uB85C \\uBC30\\uD3EC\\uD574\\uC11C\\uB294 \\uC548 \\uB429\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC0AC\\uC9C4 \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analysis-button\",\n      onClick: handleAnalysis,\n      disabled: !selectedFile || isLoading,\n      children: isLoading ? 'Gemini AI 분석 중...' : 'AI 분석 시작'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Gemini AI\\uAC00 \\uC0AC\\uC9C4\\uC744 \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        whiteSpace: 'pre-wrap'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Gemini AI \\uBD84\\uC11D \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD30C\\uC77C\\uBA85:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 14\n        }, this), \" \", analysisResult.fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"AI\\uC758 \\uBD84\\uC11D \\uB0B4\\uC6A9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        },\n        children: analysisResult.apiResponseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(PhotoAnalysis, \"ULtQzpzodBq3BMw0F9tR6o1Uu1Q=\");\n_c = PhotoAnalysis;\nexport default PhotoAnalysis;\nvar _c;\n$RefreshReg$(_c, \"PhotoAnalysis\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","GEMINI_API_KEY","GEMINI_API_URL","fileToGenerativePart","file","base64EncodedDataPromise","Promise","resolve","reader","FileReader","onloadend","result","split","readAsDataURL","inlineData","data","mimeType","type","PhotoAnalysis","_s","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","analysisResult","setAnalysisResult","isLoading","setIsLoading","error","setError","handleFileChange","event","target","files","URL","createObjectURL","handleAnalysis","imagePart","prompt","requestBody","contents","parts","text","response","fetch","method","headers","body","JSON","stringify","ok","_errorData$error","errorData","json","console","Error","status","statusText","message","responseData","candidates","length","content","fullTextResponse","forEach","part","fileName","name","apiResponseText","trim","promptFeedback","blockReason","_responseData$promptF","safetyRatings","map","r","category","probability","join","warn","err","className","children","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","accept","onChange","src","alt","onClick","disabled","textAlign","whiteSpace","fontFamily","fontSize","_c","$RefreshReg$"],"sources":["/Users/eccentric-hack/gamet/src/components/PhotoAnalysis/PhotoAnalysis.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './PhotoAnalysis.css';\n\n// WARNING: DO NOT EXPOSE YOUR API KEY PUBLICLY.\n// This is for local testing ONLY. Remove or secure via a backend for production.\nconst GEMINI_API_KEY = 'AIzaSyDkx4L2FvHs8Xqd_YSuhVCPhU0rx37PHZM';\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${GEMINI_API_KEY}`;\n\n// Helper function to convert file to base64\nconst fileToGenerativePart = async (file) => {\n  const base64EncodedDataPromise = new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result.split(',')[1]);\n    reader.readAsDataURL(file);\n  });\n  return {\n    inlineData: { data: await base64EncodedDataPromise, mimeType: file.type },\n  };\n};\n\nfunction PhotoAnalysis() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = useCallback((event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setAnalysisResult(null);\n      setError(null);\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n    }\n  }, []);\n\n  const handleAnalysis = useCallback(async () => {\n    if (!selectedFile) return;\n\n    setIsLoading(true);\n    setAnalysisResult(null);\n    setError(null);\n\n    try {\n      const imagePart = await fileToGenerativePart(selectedFile);\n      const prompt = \"이 사진을 자세히 설명해주세요. 사진 속에 무엇이 있는지, 어떤 분위기인지, 어떤 감정이 느껴지는지 알려주세요. 또한, 이 사진과 관련하여 사용자와 상호작용할 수 있는 창의적인 활동이나 질문 3가지를 제안해주세요.\";\n      \n      const requestBody = {\n        contents: [\n          {\n            parts: [\n              { text: prompt },\n              imagePart,\n            ],\n          },\n        ],\n        // Optional: Add generationConfig if needed\n        // generationConfig: {\n        //   maxOutputTokens: 2048,\n        //   temperature: 0.4,\n        //   topP: 1,\n        //   topK: 32\n        // }\n      };\n\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Gemini API Error:', errorData);\n        throw new Error(`API 요청 실패: ${response.status} ${response.statusText}. ${errorData?.error?.message || ''}`);\n      }\n\n      const responseData = await response.json();\n      \n      if (responseData.candidates && responseData.candidates.length > 0 && responseData.candidates[0].content) {\n        const parts = responseData.candidates[0].content.parts;\n        let fullTextResponse = \"\";\n        parts.forEach(part => {\n          if (part.text) {\n            fullTextResponse += part.text + '\\n';\n          }\n        });\n\n        setAnalysisResult({\n          fileName: selectedFile.name,\n          apiResponseText: fullTextResponse.trim(),\n          // You might want to parse more structured data if the API provides it,\n          // or use further prompts to get structured JSON.\n          // For now, we display the raw text response.\n        });\n      } else if (responseData.promptFeedback && responseData.promptFeedback.blockReason) {\n        setError(`분석이 차단되었습니다: ${responseData.promptFeedback.blockReason} - ${responseData.promptFeedback.safetyRatings?.map(r => `${r.category} (${r.probability})`).join(', ') || '세부 정보 없음'}`);\n      } else {\n        console.warn(\"Unexpected API response structure:\", responseData);\n        setError('AI 분석 결과를 가져왔으나, 예상치 못한 응답 구조입니다.');\n      }\n\n    } catch (err) {\n      console.error(\"Error during API call:\", err);\n      setError(`분석 중 오류가 발생했습니다: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile]);\n\n  return (\n    <section className=\"photo-analysis-section\">\n      <h2>📸 사진 분석 및 상호작용 (Gemini API 연동)</h2>\n      <p style={{color: 'red', fontWeight: 'bold'}}>\n        주의: 실제 Gemini API 키가 코드에 포함되어 있습니다. \n        이것은 로컬 테스트용이며, 프로덕션 환경이나 공개 저장소에 절대로 이대로 배포해서는 안 됩니다.\n      </p>\n      \n      <div className=\"upload-area\">\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        {previewUrl && (\n          <div className=\"image-preview\">\n            <img src={previewUrl} alt=\"업로드된 사진 미리보기\" />\n          </div>\n        )}\n      </div>\n\n      <button \n        className=\"analysis-button\" \n        onClick={handleAnalysis} \n        disabled={!selectedFile || isLoading}\n      >\n        {isLoading ? 'Gemini AI 분석 중...' : 'AI 분석 시작'}\n      </button>\n\n      {isLoading && <p className=\"loading-message\">Gemini AI가 사진을 분석하고 있습니다. 잠시만 기다려 주세요...</p>}\n      {error && <p className=\"error-message\" style={{color: 'red', textAlign: 'center', whiteSpace: 'pre-wrap'}}>{error}</p>}\n\n      {analysisResult && (\n        <div className=\"analysis-result\">\n          <h3>Gemini AI 분석 결과</h3>\n          <p><strong>파일명:</strong> {analysisResult.fileName}</p>\n          <h4>AI의 분석 내용:</h4>\n          {/* Displaying raw text. For a better UX, you might parse this text or use further prompts for structured data. */}\n          <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'inherit', fontSize: 'inherit' }}>\n            {analysisResult.apiResponseText}\n          </pre>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default PhotoAnalysis; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,qBAAqB;;AAE5B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG,yCAAyC;AAChE,MAAMC,cAAc,GAAG,uGAAuGD,cAAc,EAAE;;AAE9I;AACA,MAAME,oBAAoB,GAAG,MAAOC,IAAI,IAAK;EAC3C,MAAMC,wBAAwB,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;IACxD,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAMH,OAAO,CAACC,MAAM,CAACG,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7DJ,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;EAC5B,CAAC,CAAC;EACF,OAAO;IACLU,UAAU,EAAE;MAAEC,IAAI,EAAE,MAAMV,wBAAwB;MAAEW,QAAQ,EAAEZ,IAAI,CAACa;IAAK;EAC1E,CAAC;AACH,CAAC;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiC,gBAAgB,GAAGhC,WAAW,CAAEiC,KAAK,IAAK;IAC9C,MAAM3B,IAAI,GAAG2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI7B,IAAI,EAAE;MACRiB,eAAe,CAACjB,IAAI,CAAC;MACrBmB,aAAa,CAACW,GAAG,CAACC,eAAe,CAAC/B,IAAI,CAAC,CAAC;MACxCqB,iBAAiB,CAAC,IAAI,CAAC;MACvBI,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACLR,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,cAAc,GAAGtC,WAAW,CAAC,YAAY;IAC7C,IAAI,CAACsB,YAAY,EAAE;IAEnBO,YAAY,CAAC,IAAI,CAAC;IAClBF,iBAAiB,CAAC,IAAI,CAAC;IACvBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMQ,SAAS,GAAG,MAAMlC,oBAAoB,CAACiB,YAAY,CAAC;MAC1D,MAAMkB,MAAM,GAAG,yHAAyH;MAExI,MAAMC,WAAW,GAAG;QAClBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,CACL;YAAEC,IAAI,EAAEJ;UAAO,CAAC,EAChBD,SAAS;QAEb,CAAC;QAEH;QACA;QACA;QACA;QACA;QACA;QACA;MACF,CAAC;MAED,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC1C,cAAc,EAAE;QAC3C2C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;QAAA,IAAAC,gBAAA;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,OAAO,CAAC1B,KAAK,CAAC,mBAAmB,EAAEwB,SAAS,CAAC;QAC7C,MAAM,IAAIG,KAAK,CAAC,cAAcZ,QAAQ,CAACa,MAAM,IAAIb,QAAQ,CAACc,UAAU,KAAK,CAAAL,SAAS,aAATA,SAAS,wBAAAD,gBAAA,GAATC,SAAS,CAAExB,KAAK,cAAAuB,gBAAA,uBAAhBA,gBAAA,CAAkBO,OAAO,KAAI,EAAE,EAAE,CAAC;MAC7G;MAEA,MAAMC,YAAY,GAAG,MAAMhB,QAAQ,CAACU,IAAI,CAAC,CAAC;MAE1C,IAAIM,YAAY,CAACC,UAAU,IAAID,YAAY,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC,IAAIF,YAAY,CAACC,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,EAAE;QACvG,MAAMrB,KAAK,GAAGkB,YAAY,CAACC,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAACrB,KAAK;QACtD,IAAIsB,gBAAgB,GAAG,EAAE;QACzBtB,KAAK,CAACuB,OAAO,CAACC,IAAI,IAAI;UACpB,IAAIA,IAAI,CAACvB,IAAI,EAAE;YACbqB,gBAAgB,IAAIE,IAAI,CAACvB,IAAI,GAAG,IAAI;UACtC;QACF,CAAC,CAAC;QAEFjB,iBAAiB,CAAC;UAChByC,QAAQ,EAAE9C,YAAY,CAAC+C,IAAI;UAC3BC,eAAe,EAAEL,gBAAgB,CAACM,IAAI,CAAC;UACvC;UACA;UACA;QACF,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIV,YAAY,CAACW,cAAc,IAAIX,YAAY,CAACW,cAAc,CAACC,WAAW,EAAE;QAAA,IAAAC,qBAAA;QACjF3C,QAAQ,CAAC,gBAAgB8B,YAAY,CAACW,cAAc,CAACC,WAAW,MAAM,EAAAC,qBAAA,GAAAb,YAAY,CAACW,cAAc,CAACG,aAAa,cAAAD,qBAAA,uBAAzCA,qBAAA,CAA2CE,GAAG,CAACC,CAAC,IAAI,GAAGA,CAAC,CAACC,QAAQ,KAAKD,CAAC,CAACE,WAAW,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,KAAI,UAAU,EAAE,CAAC;MAC3L,CAAC,MAAM;QACLxB,OAAO,CAACyB,IAAI,CAAC,oCAAoC,EAAEpB,YAAY,CAAC;QAChE9B,QAAQ,CAAC,mCAAmC,CAAC;MAC/C;IAEF,CAAC,CAAC,OAAOmD,GAAG,EAAE;MACZ1B,OAAO,CAAC1B,KAAK,CAAC,wBAAwB,EAAEoD,GAAG,CAAC;MAC5CnD,QAAQ,CAAC,oBAAoBmD,GAAG,CAACtB,OAAO,EAAE,CAAC;IAC7C,CAAC,SAAS;MACR/B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,oBACEpB,OAAA;IAASiF,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACzClF,OAAA;MAAAkF,QAAA,EAAI;IAA+B;MAAAhB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrF,OAAA;MAAGsF,KAAK,EAAE;QAACC,KAAK,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAC;IAG9C;MAAAhB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJrF,OAAA;MAAKiF,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BlF,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACwE,MAAM,EAAC,SAAS;QAACC,QAAQ,EAAE5D;MAAiB;QAAAoC,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE/D,UAAU,iBACTtB,OAAA;QAAKiF,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BlF,OAAA;UAAK2F,GAAG,EAAErE,UAAW;UAACsE,GAAG,EAAC;QAAc;UAAA1B,QAAA,EAAAiB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAnB,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CACN;IAAA;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENrF,OAAA;MACEiF,SAAS,EAAC,iBAAiB;MAC3BY,OAAO,EAAEzD,cAAe;MACxB0D,QAAQ,EAAE,CAAC1E,YAAY,IAAIM,SAAU;MAAAwD,QAAA,EAEpCxD,SAAS,GAAG,mBAAmB,GAAG;IAAU;MAAAwC,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAER3D,SAAS,iBAAI1B,OAAA;MAAGiF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAwC;MAAAhB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACxFzD,KAAK,iBAAI5B,OAAA;MAAGiF,SAAS,EAAC,eAAe;MAACK,KAAK,EAAE;QAACC,KAAK,EAAE,KAAK;QAAEQ,SAAS,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAU,CAAE;MAAAd,QAAA,EAAEtD;IAAK;MAAAsC,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErH7D,cAAc,iBACbxB,OAAA;MAAKiF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlF,OAAA;QAAAkF,QAAA,EAAI;MAAe;QAAAhB,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrF,OAAA;QAAAkF,QAAA,gBAAGlF,OAAA;UAAAkF,QAAA,EAAQ;QAAI;UAAAhB,QAAA,EAAAiB,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC7D,cAAc,CAAC0C,QAAQ;MAAA;QAAAA,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDrF,OAAA;QAAAkF,QAAA,EAAI;MAAU;QAAAhB,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEnBrF,OAAA;QAAKsF,KAAK,EAAE;UAAEU,UAAU,EAAE,UAAU;UAAEC,UAAU,EAAE,SAAS;UAAEC,QAAQ,EAAE;QAAU,CAAE;QAAAhB,QAAA,EAChF1D,cAAc,CAAC4C;MAAe;QAAAF,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAnB,QAAA,EAAAiB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAAClE,EAAA,CAzIQD,aAAa;AAAAiF,EAAA,GAAbjF,aAAa;AA2ItB,eAAeA,aAAa;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}